/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

public class Problem002 {
	public static void main(String[] args){
		long startTime = System.currentTimeMillis();
		final int UPPER_FIB_LIMIT = 4000000;
		int i = 0;//index for fib numbers
		int fibnum;//current fib number
		int sum = 0;//sum of even fib numbers
		do{
			fibnum = fib(i);//get the ith fib number
						
			//test for even, add to sum
			if(fibnum % 2 == 0){
				sum = sum + fibnum;
			}
			i++;
		}
		while(fibnum < UPPER_FIB_LIMIT);
		System.out.println(sum + " was found in " + (System.currentTimeMillis()-startTime) + " ms.");
	}


	private static int fib(int f1){
		int fibonacci;
		//building blocks for fibonacci formula
		double PHI = Math.pow(((1+Math.sqrt(5))/2),f1);
		double phi = Math.pow(((1-Math.sqrt(5))/2),f1);
		//fibonacci formula
		fibonacci = (int)((PHI - phi)/Math.sqrt(5));
		return fibonacci;
	}
}
